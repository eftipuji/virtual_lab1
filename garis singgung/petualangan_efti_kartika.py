# -*- coding: utf-8 -*-
"""petualangan efti kartika.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12IdY7zvI34gteBWGcCS2gxylVdZw_UxV
"""

!pip install streamlit pyngrok --quiet

kode = """
import streamlit as st
import math
import time
import random
import pandas as pd
import plotly.express as px

def hitung_jarak_3d(x1, y1, z1, x2, y2, z2):
    """Menghitung jarak Euclidean antara dua titik di ruang 3D."""
    dx = x2 - x1
    dy = y2 - y1
    dz = z2 - z1
    jarak_kuadrat = dx**2 + dy**2 + dz**2
    return math.sqrt(jarak_kuadrat)

# --- Konfigurasi Halaman Streamlit ---
st.set_page_config(
    page_title="Petualangan Jarak Antar Objek 🌌",
    page_icon="🌠",
    layout="wide",
    initial_sidebar_state="expanded"
)

# --- Judul dan Deskripsi Aplikasi ---
st.title("✨ Petualangan Mengukur Jarak di Alam Semesta ✨")
st.markdown("""
Aplikasi ini memungkinkan Anda menghitung **jarak 3D** antara dua objek (misalnya, planet, wahana antariksa)
berdasarkan koordinat XYZ mereka. Mari jelajahi angkasa!
""")

st.sidebar.header("Pengaturan Objek 🛰️")

# --- Input Koordinat Objek 1 ---
st.sidebar.subheader("Objek Pertama (Planet A)")
nama_objek1 = st.sidebar.text_input("Nama Objek 1", "Bumi")
x1 = st.sidebar.number_input(f"Koordinat X {nama_objek1} (km)", value=149_600_000.0, format="%.2f")
y1 = st.sidebar.number_input(f"Koordinat Y {nama_objek1} (km)", value=0.0, format="%.2f")
z1 = st.sidebar.number_input(f"Koordinat Z {nama_objek1} (km)", value=0.0, format="%.2f")

st.sidebar.markdown("---")

# --- Input Koordinat Objek 2 ---
st.sidebar.subheader("Objek Kedua (Planet B)")
nama_objek2 = st.sidebar.text_input("Nama Objek 2", "Mars")
x2 = st.sidebar.number_input(f"Koordinat X {nama_objek2} (km)", value=227_900_000.0, format="%.2f")
y2 = st.sidebar.number_input(f"Koordinat Y {nama_objek2} (km)", value=50_000_000.0, format="%.2f")
z2 = st.sidebar.number_input(f"Koordinat Z {nama_objek2} (km)", value=10_000_000.0, format="%.2f")


st.markdown("---") # Garis pemisah konten utama

# --- Tombol Hitung dan Animasi ---
st.header("🔬 Hasil Perhitungan Jarak")

if st.button("Hitung Jarak Antar Objek 🚀"):
    st.write("Menganalisis posisi objek di alam semesta...")
    progress_bar = st.progress(0)
    status_text = st.empty()

    for percent_complete in range(100):
        time.sleep(0.01) # Animasi progress bar
        progress_bar.progress(percent_complete + 1)
        if percent_complete < 30:
            status_text.text("Menghitung perbedaan koordinat...")
        elif percent_complete < 70:
            status_text.text("Mengkuadratkan dan menjumlahkan...")
        else:
            status_text.text("Mengambil akar kuadrat...")
    progress_bar.empty()
    status_text.empty()

    jarak_final = hitung_jarak_3d(x1, y1, z1, x2, y2, z2)

    # Memberikan efek warna dan pesan hasil
    colors = ["#4CAF50", "#2196F3", "#FFC107", "#9C27B0", "#E91E63"] # Material Design Colors
    selected_color = random.choice(colors)

    st.markdown(f"""
    <div style="background-color:{selected_color}; padding: 20px; border-radius: 10px; text-align: center;">
        <h3 style="color: white; margin-bottom: 10px;">🎉 Jarak Terukur! 🎉</h3>
        <p style="font-size: 24px; font-weight: bold; color: white;">
            Jarak antara <span style="font-style: italic;">{nama_objek1}</span> dan <span style="font-style: italic;">{nama_objek2}</span> adalah:
        </p>
        <p style="font-size: 36px; font-weight: bolder; color: white; animation: pulse 1s infinite;">
            {jarak_final:,.2f} km
        </p>
    </div>
    <style>
        @keyframes pulse {{
            0% {{ transform: scale(1); }}
            50% {{ transform: scale(1.05); }}
            100% {{ transform: scale(1); }}
        }}
    </style>
    """, unsafe_allow_html=True)

    st.success("Perhitungan selesai! Selamat menjelajah!")

    # --- Visualisasi Sederhana dengan Plotly ---
    st.header("🗺️ Visualisasi Posisi Objek")
    st.write("Lihat posisi relatif kedua objek di ruang 3D.")

    data = {
        'Objek': [nama_objek1, nama_objek2],
        'X': [x1, x2],
        'Y': [y1, y2],
        'Z': [z1, z2]
    }
    df = pd.DataFrame(data)

    fig = px.scatter_3d(df, x='X', y='Y', z='Z', color='Objek', text='Objek',
                        title='Posisi Objek di Ruang Angkasa',
                        labels={'X': 'X Koordinat (km)', 'Y': 'Y Koordinat (km)', 'Z': 'Z Koordinat (km)'})

    # Menambahkan garis yang menghubungkan kedua titik
    fig.add_scatter3d(x=[x1, x2], y=[y1, y2], z=[z1, z2],
                      mode='lines',
                      line=dict(color='lightgray', width=5),
                      name='Garis Jarak')

    st.plotly_chart(fig, use_container_width=True)

else:
    st.info("Masukkan koordinat di sidebar kiri dan tekan tombol 'Hitung Jarak Antar Objek' untuk memulai petualangan!")

st.markdown("---")
st.caption("Catatan: Koordinat dan jarak di aplikasi ini bersifat ilustratif. Untuk data astronomi akurat, gunakan data efemeris resmi.")
st.caption("Dibuat dengan ❤️ dan Streamlit.")

"""

with open("kalkulator_app.py", "w") as f:
    f.write(kode)

!pkill -f streamlit

!ngrok config add-authtoken *ubah dengan token kamu*

from pyngrok import ngrok

# Jalankan streamlit sebagai background process
!streamlit run kalkulator_app.py --server.port 8502 --server.headless true &>/dev/null &

# Hubungkan ke Streamlit via ngrok (versi baru)
public_url = ngrok.connect(addr="8502", proto="http")
print("Aplikasi bisa diakses di link berikut:")
print(public_url)